# Firstly, we need to define what tags should be considered sentence delimiters. For this example, only full stop is set as delimiter.
DELIMITERS = "<.>" ;

# We can define sets for common tag clusters
# LIST Case = (n s) (n p) ; # A set that matches either a Noun Singular or a Noun Plural

SECTION
# If there is a singular noun to the right, I cannot be a verb or noun.
# REMOVE (n) OR (v) IF (1 (n s)) ;

# If there is a conjunction followed by a certain cohort of the same CASE as me, choose me.
# SELECT $$Case IF (1 (cnjcoo) LINK 1C $$Case) ;

# This rule distinguishes between the demonstrative determiner and pronoun forms of "wan". 
# "wan" means this, and is chosen as a demonstrative determiner when preceding a noun. 
REMOVE (prn) IF (1 (n)) ;
REMOVE (det) IF (NOT 1 (n)) ;

# This rule distinguishes between the noun and determiner translations of "níil."
# "níil" can mean "my head" or "those."
# If "níil" is followed by an inanimate plural noun, then it is not a noun.
REMOVE (n) IF (1 (n nn pl)) ;
# not a pronoun if followed by plural verb
REMOVE (prn) IF (NOT 1 (v tv nn s_3pl)) (0 ("níil")); 
REMOVE (prn) IF (NOT 1 (v iv nn s_3pl)) (0 ("níil"));

# This rule distingushes between the question marker and emphatic forms of "há."
# If there is a question mark at the end of the sentence, then choose question marker.
REMOVE (emph) IF (1* ("?")) ;
REMOVE (qst) IF (NOT 1* ("?")) ;

# https://wikis.swarthmore.edu/ling073/Munsee_and_English/AmbiguityResolution


# Resources:
# http://visl.sdu.dk/cg3.html
# http://groups.google.com/group/constraint-grammar
# http://kevindonnelly.org.uk/2010/05/constraint-grammar-tutorial/
# https://wiki.apertium.org/wiki/Constraint_Grammar
# https://wiki.apertium.org/wiki/Apertium_and_Constraint_Grammar

